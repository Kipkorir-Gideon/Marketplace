name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ecommerce
        ports:
          - 5432:5432
        volumes:
          - postgres_data:/var/lib/postgresql/data

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r services/product-catalog/requirements.txt
          pip install -r services/user-management/requirements.txt
          pip install -r services/order/requirements.txt
          pip install -r api-gateway/requirements.txt

      - name: Run tests
        run: |
          pytest tests/product-catalog
          pytest tests/user-management
          pytest tests/order
          pytest api-gateway/tests

      - name: Build Docker images
        run: |
          docker build -t product-catalog services/product-catalog
          docker build -t user-management services/user-management
          docker build -t order services/order
          docker build -t payment services/payment
          docker build -t api-gateway api-gateway

      - name: Push Docker images
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push product-catalog
          docker push user-management
          docker push order
          docker push payment
          docker push api-gateway

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f infrastructure/kubernetes/ 

volumes:
  postgres_data: